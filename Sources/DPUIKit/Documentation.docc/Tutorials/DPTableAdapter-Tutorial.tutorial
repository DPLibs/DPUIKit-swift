@Tutorial(time: 20) {
    @Intro(title: "Working with DPTableAdapter") {
        Let's create a screen with content in a table.
        
        @Image(source: "dptableadapter_tutorial_logo.png", alt: "")
    }
    
    @Section(title: "Domain layer") {
        @ContentAndMedia {
            Let's set up the domain layer.
        }
        
        @Steps {
            @Step {
                Let's create an `Recent.swift` file.
                @Code(name: "Recent.swift", file: "dptableadapter_tutorial-01-01-Recent.swift") {}
            }
            @Step {
                To simplify the work, we implement the `Identifiable` and `Equatable` protocols.
                @Code(name: "Recent.swift", file: "dptableadapter_tutorial-01-02-Recent.swift") {}
            }
            @Step {
                Let's create a file `RecentService.swift`. And we will create a protocol for the service for receiving `recents` models.
                @Code(name: "RecentService.swift", file: "dptableadapter_tutorial-01-03-RecentService.swift") {}
            }
            @Step {
                Let's add a mock class `RecentMockService` inheriting from `RecentService`.
                @Code(name: "RecentService.swift", file: "dptableadapter_tutorial-01-04-RecentService.swift") {}
            }
        }
    }
        
    @Section(title: "Presentation layer") {
        @ContentAndMedia {
            Let's set up the presentation layer.
        }
        
        @Steps {
            @Step {
                Let's create an `RecentsViewController.swift` and `RecentsViewModel.swift` files.
                @Image(source: "dptableadapter_tutorial_logo.png", alt: "")
            }
            @Step {
                To simplify the work, we implement the `Identifiable` and `Equatable` protocols.
                @Code(name: "Recent.swift", file: "dptableadapter_tutorial-01-02-Recent.swift") {}
            }
            @Step {
                Let's create a file `RecentService.swift`. And we will create a protocol for the service for receiving `recents` models.
                @Code(name: "RecentService.swift", file: "dptableadapter_tutorial-01-03-RecentService.swift") {}
            }
            @Step {
                Let's add a mock class `RecentMockService` inheriting from `RecentService`.
                @Code(name: "RecentService.swift", file: "dptableadapter_tutorial-01-04-RecentService.swift") {}
            }
        }
    }   
}
