{"sections":[],"seeAlsoSections":[{"identifiers":["doc:\/\/DPUIKit\/documentation\/DPUIKit\/Coordinators","doc:\/\/DPUIKit\/documentation\/DPUIKit\/Table","doc:\/\/DPUIKit\/documentation\/DPUIKit\/Collection","doc:\/\/DPUIKit\/documentation\/DPUIKit\/AutoLayout","doc:\/\/DPUIKit\/documentation\/DPUIKit\/StyleWrapper","doc:\/\/DPUIKit\/documentation\/DPUIKit\/Xcode_templates","doc:\/\/DPUIKit\/tutorials\/DPUIKit-Tutorial"],"generated":true}],"metadata":{"role":"collectionGroup","modules":[{"name":"DPUIKit"}],"title":"MVVM","platforms":[{"name":"iOS","introducedAt":"11.0"}]},"topicSections":[{"identifiers":["doc:\/\/DPUIKit\/documentation\/DPUIKit\/DPViewController","doc:\/\/DPUIKit\/documentation\/DPUIKit\/DPViewModel","doc:\/\/DPUIKit\/documentation\/DPUIKit\/DPViewModelOutput","doc:\/\/DPUIKit\/documentation\/DPUIKit\/DPViewErrorHandler"]}],"hierarchy":{"paths":[["doc:\/\/DPUIKit\/documentation\/DPUIKit"]]},"primaryContentSections":[{"kind":"content","content":[{"type":"heading","text":"Overview","anchor":"Overview","level":2},{"type":"paragraph","inlineContent":[{"text":"Consists of the following components: ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/DPUIKit\/documentation\/DPUIKit\/DPViewController"},{"text":", ","type":"text"},{"type":"reference","identifier":"doc:\/\/DPUIKit\/documentation\/DPUIKit\/DPViewModel","isActive":true},{"type":"text","text":", "},{"type":"reference","isActive":true,"identifier":"doc:\/\/DPUIKit\/documentation\/DPUIKit\/DPViewModelOutput"},{"type":"text","text":" and "},{"isActive":true,"type":"reference","identifier":"doc:\/\/DPUIKit\/documentation\/DPUIKit\/DPViewErrorHandler"},{"type":"text","text":"."}]},{"inlineContent":[{"type":"text","text":"The main concept is to implement an approach of simple scalability, flexibility and component unobtrusiveness. Therefore, "},{"type":"codeVoice","code":"MVVM"},{"type":"text","text":" does not always have to be built entirely on a legacy implementation. Those. initially there can only be a "},{"code":"TestViewController","type":"codeVoice"},{"type":"text","text":". For example:"}],"type":"paragraph"},{"code":["class TestViewController: DPViewController {}"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"If the controller needs to receive some data from the network or LDB, then add a ","type":"text"},{"code":"TestViewModel","type":"codeVoice"},{"text":" to it:","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["class TestViewModel: DPViewModel {","   var testData: String?","","   func loadTestData() {","      ...","   }","}","","class TestViewController: DPViewController {","   override init() {","      super.init()","      self.model = TestViewModel()","   }","   ...","","   private var model: TestViewModel? {","     get { self._model as? TestViewModel }","     set { self._model = newValue }","   }","}"]},{"inlineContent":[{"text":"If the controller has unique error display, then also add ","type":"text"},{"type":"codeVoice","code":"TestViewErrorHanlder"},{"text":" respectively:","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["class TestViewModel: DPViewModel {","   var testData: String?","","   func loadTestData() {","      ...","   }","}","","class TestViewErrorHandler: DPViewErrorHandler {","   func handleErrorUnique(_ error: Error) {","      ...","   }","}","","class TestViewController: DPViewController {","   override init() {","      super.init()","      ","      self.model = TestViewModel()","      self.errorHandlder = TestViewErrorHandler()","   }","   ...","","   private var model: TestViewModel? {","     get { self._model as? TestViewModel }","     set { self._model = newValue }","   }","","   private var errorHandlder: TestViewErrorHandler? { ... }","}"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"code":"private","type":"codeVoice"},{"type":"text","text":" modifier for "},{"type":"codeVoice","code":"model"},{"type":"text","text":" and "},{"code":"errorHanlder","type":"codeVoice"},{"text":" is not accidental. This makes inheritance easier.","type":"text"}]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/dpuikit\/mvvm"]}],"identifier":{"url":"doc:\/\/DPUIKit\/documentation\/DPUIKit\/MVVM","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Module for designing a screen or part of a screen"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"article","references":{"doc://DPUIKit/documentation/DPUIKit/Coordinators":{"url":"\/documentation\/dpuikit\/coordinators","role":"collectionGroup","abstract":[{"text":"Used to navigate between screens and implement flow.","type":"text"}],"type":"topic","kind":"article","identifier":"doc:\/\/DPUIKit\/documentation\/DPUIKit\/Coordinators","title":"Coordinators"},"doc://DPUIKit/documentation/DPUIKit/Xcode_templates":{"kind":"article","identifier":"doc:\/\/DPUIKit\/documentation\/DPUIKit\/Xcode_templates","abstract":[],"title":"Xcode templates","type":"topic","role":"article","url":"\/documentation\/dpuikit\/xcode_templates"},"doc://DPUIKit/tutorials/DPUIKit-Tutorial":{"kind":"overview","identifier":"doc:\/\/DPUIKit\/tutorials\/DPUIKit-Tutorial","abstract":[{"text":"Letâ€™s look at working with the main components of the library","type":"text"}],"title":"Tutorials DPUIKit","type":"topic","role":"overview","url":"\/tutorials\/dpuikit-tutorial"},"doc://DPUIKit/documentation/DPUIKit/Table":{"url":"\/documentation\/dpuikit\/table","identifier":"doc:\/\/DPUIKit\/documentation\/DPUIKit\/Table","title":"Table","kind":"article","type":"topic","role":"collectionGroup","abstract":[{"text":"Components for working with a ","type":"text"},{"type":"codeVoice","code":"UITableView"},{"type":"text","text":"."}]},"doc://DPUIKit/documentation/DPUIKit/Collection":{"role":"collectionGroup","kind":"article","abstract":[{"text":"Components for working with a ","type":"text"},{"code":"UICollectionView","type":"codeVoice"},{"text":".","type":"text"}],"type":"topic","title":"Collection","url":"\/documentation\/dpuikit\/collection","identifier":"doc:\/\/DPUIKit\/documentation\/DPUIKit\/Collection"},"doc://DPUIKit/documentation/DPUIKit":{"abstract":[{"text":"An unobtrusive set of extensions and classes for UIKit","type":"text"}],"title":"DPUIKit","type":"topic","kind":"symbol","url":"\/documentation\/dpuikit","identifier":"doc:\/\/DPUIKit\/documentation\/DPUIKit","role":"collection"},"doc://DPUIKit/documentation/DPUIKit/DPViewModelOutput":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DPViewModelOutput"}],"title":"DPViewModelOutput","abstract":[{"type":"text","text":"Interface for sending notifications from "},{"isActive":true,"type":"reference","identifier":"doc:\/\/DPUIKit\/documentation\/DPUIKit\/DPViewModel"},{"text":".","type":"text"}],"role":"symbol","url":"\/documentation\/dpuikit\/dpviewmodeloutput","identifier":"doc:\/\/DPUIKit\/documentation\/DPUIKit\/DPViewModelOutput","kind":"symbol","type":"topic","navigatorTitle":[{"text":"DPViewModelOutput","kind":"identifier"}]},"doc://DPUIKit/documentation/DPUIKit/DPViewErrorHandler":{"title":"DPViewErrorHandler","abstract":[{"text":"Needed to process and display errors.","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"DPViewErrorHandler","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/dpuikit\/dpviewerrorhandler","identifier":"doc:\/\/DPUIKit\/documentation\/DPUIKit\/DPViewErrorHandler","navigatorTitle":[{"kind":"identifier","text":"DPViewErrorHandler"}],"type":"topic"},"doc://DPUIKit/documentation/DPUIKit/DPViewModel":{"type":"topic","role":"symbol","abstract":[{"text":"Is the source of data and states for ","type":"text"},{"identifier":"doc:\/\/DPUIKit\/documentation\/DPUIKit\/DPViewController","isActive":true,"type":"reference"},{"text":".","type":"text"}],"identifier":"doc:\/\/DPUIKit\/documentation\/DPUIKit\/DPViewModel","url":"\/documentation\/dpuikit\/dpviewmodel","title":"DPViewModel","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"DPViewModel"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"DPViewModel"}]},"doc://DPUIKit/documentation/DPUIKit/StyleWrapper":{"role":"collectionGroup","url":"\/documentation\/dpuikit\/stylewrapper","kind":"article","identifier":"doc:\/\/DPUIKit\/documentation\/DPUIKit\/StyleWrapper","abstract":[{"type":"text","text":"View extensions setting styles"}],"type":"topic","title":"StyleWrapper"},"doc://DPUIKit/documentation/DPUIKit/DPViewController":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"DPViewController","kind":"identifier"}],"abstract":[{"type":"text","text":"Needed to display views and transition to other screens."}],"identifier":"doc:\/\/DPUIKit\/documentation\/DPUIKit\/DPViewController","url":"\/documentation\/dpuikit\/dpviewcontroller","type":"topic","kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"DPViewController"}],"title":"DPViewController"},"doc://DPUIKit/documentation/DPUIKit/AutoLayout":{"title":"AutoLayout","type":"topic","url":"\/documentation\/dpuikit\/autolayout","abstract":[{"text":"View extensions setting auto layout constraints","type":"text"}],"identifier":"doc:\/\/DPUIKit\/documentation\/DPUIKit\/AutoLayout","role":"collectionGroup","kind":"article"}}}