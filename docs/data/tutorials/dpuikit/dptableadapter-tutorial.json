{"schemaVersion":{"patch":0,"minor":3,"major":0},"sections":[{"estimatedTimeInMinutes":20,"title":"Working with DPTableAdapter","backgroundImage":"dptableadapter_tutorial-result.png","kind":"hero","content":[{"inlineContent":[{"text":"Let’s create a screen with content in a table.","type":"text"}],"type":"paragraph"}],"video":"dptableadapter_tutorial-result.mp4","chapter":"DPTableAdapter"},{"tasks":[{"anchor":"Domain-layer","title":"Domain layer","contentSection":[{"mediaPosition":"trailing","kind":"contentAndMedia","content":[{"type":"paragraph","inlineContent":[{"text":"Set up the domain layer.","type":"text"}]}]}],"stepsSection":[{"runtimePreview":null,"type":"step","caption":[],"media":null,"code":"dptableadapter_tutorial-01-01-Recent.swift","content":[{"type":"paragraph","inlineContent":[{"text":"Create an ","type":"text"},{"type":"codeVoice","code":"Recent.swift"},{"type":"text","text":" file."}]}]},{"type":"step","runtimePreview":null,"caption":[],"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"To simplify the work, we implement the "},{"code":"Identifiable","type":"codeVoice"},{"type":"text","text":" and "},{"code":"Equatable","type":"codeVoice"},{"text":" protocols.","type":"text"}]}],"media":null,"code":"dptableadapter_tutorial-01-02-Recent.swift"},{"type":"step","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Create a file "},{"code":"RecentService.swift","type":"codeVoice"},{"text":". And we will create a protocol for the service for receiving ","type":"text"},{"type":"codeVoice","code":"recents"},{"text":" models.","type":"text"}]}],"caption":[],"media":null,"code":"dptableadapter_tutorial-01-03-RecentService.swift","runtimePreview":null},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add a mock class "},{"code":"RecentMockService","type":"codeVoice"},{"type":"text","text":" inheriting from "},{"code":"RecentService","type":"codeVoice"},{"type":"text","text":"."}]}],"type":"step","media":null,"runtimePreview":null,"code":"dptableadapter_tutorial-01-04-RecentService.swift","caption":[]}]},{"title":"ViewModel","stepsSection":[{"content":[{"inlineContent":[{"type":"text","text":"Сreate an "},{"type":"codeVoice","code":"RecentsViewModel.swift"},{"text":" file.","type":"text"}],"type":"paragraph"}],"runtimePreview":null,"type":"step","code":"dptableadapter_tutorial-02-01-RecentsViewModel.swift","media":null,"caption":[]},{"runtimePreview":null,"code":"dptableadapter_tutorial-02-02-RecentsViewModel.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add "},{"type":"codeVoice","code":"RecentService"},{"text":", as well as an array of ","type":"text"},{"type":"codeVoice","code":"recents"},{"type":"text","text":" and callbacks for the "},{"type":"codeVoice","code":"viewController"},{"type":"text","text":"."}]}],"caption":[],"type":"step","media":null},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add methods for changing the data model."}]}],"caption":[],"type":"step","media":null,"code":"dptableadapter_tutorial-02-03-RecentsViewModel.swift","runtimePreview":null}],"contentSection":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Set up the "},{"code":"viewModel","type":"codeVoice"},{"text":".","type":"text"}]}],"mediaPosition":"trailing","kind":"contentAndMedia"}],"anchor":"ViewModel"},{"title":"Views","stepsSection":[{"media":null,"runtimePreview":null,"code":"dptableadapter_tutorial-03-01-RecentsViewController.swift","caption":[],"type":"step","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Сreate an "},{"type":"codeVoice","code":"RecentsViewController.swift"},{"type":"text","text":" file."}]}]},{"runtimePreview":null,"type":"step","code":"dptableadapter_tutorial-03-02-RecentsViewController.swift","caption":[],"media":null,"content":[{"type":"paragraph","inlineContent":[{"text":"Add a table.","type":"text"}]}]},{"type":"step","media":null,"runtimePreview":"dptableadapter_tutorial-03-03-RecentView.png","caption":[],"code":"dptableadapter_tutorial-03-03-RecentView.swift","content":[{"inlineContent":[{"text":"Сreate an ","type":"text"},{"code":"RecentView.swift","type":"codeVoice"},{"type":"text","text":" file."}],"type":"paragraph"}]},{"type":"step","media":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Сreate an "},{"type":"codeVoice","code":"RecentTableRowCell.swift"},{"type":"text","text":" file and add "},{"type":"codeVoice","code":"RecentView"},{"type":"text","text":" there."}]}],"caption":[],"code":"dptableadapter_tutorial-03-04-RecentTableRowCell.swift","runtimePreview":null}],"contentSection":[{"kind":"contentAndMedia","content":[{"inlineContent":[{"type":"text","text":"Set up views."}],"type":"paragraph"}],"mediaPosition":"trailing"}],"anchor":"Views"},{"title":"Table adapter","anchor":"Table-adapter","contentSection":[{"kind":"contentAndMedia","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Configure the "},{"code":"DPTableAdapter","type":"codeVoice"},{"text":".","type":"text"}]}],"mediaPosition":"trailing"}],"stepsSection":[{"code":"dptableadapter_tutorial-04-01-RecentsViewController.swift","caption":[],"content":[{"type":"paragraph","inlineContent":[{"text":"Add ","type":"text"},{"code":"RecentTableRowCell.Adapter","type":"codeVoice"},{"text":" to ","type":"text"},{"code":"RecentsViewController","type":"codeVoice"},{"text":".","type":"text"}]}],"type":"step","runtimePreview":null,"media":null},{"code":"dptableadapter_tutorial-04-02-RecentsViewController.swift","runtimePreview":null,"media":null,"type":"step","content":[{"inlineContent":[{"type":"text","text":"Add "},{"type":"codeVoice","code":"didSelect"},{"type":"text","text":" to `RecentTableRowCell.Adapter’."}],"type":"paragraph"}],"caption":[]},{"runtimePreview":"dptableadapter_tutorial-04-03-RecentsViewController.png","caption":[],"type":"step","content":[{"type":"paragraph","inlineContent":[{"text":"Add ","type":"text"},{"code":"onCellLeading","type":"codeVoice"},{"text":" to `RecentTableRowCell.Adapter’.","type":"text"}]}],"media":null,"code":"dptableadapter_tutorial-04-03-RecentsViewController.swift"},{"caption":[],"code":"dptableadapter_tutorial-04-04-RecentsViewController.swift","type":"step","runtimePreview":"dptableadapter_tutorial-04-04-RecentsViewController.png","content":[{"inlineContent":[{"type":"text","text":"Add "},{"type":"codeVoice","code":"onCellTrailing"},{"text":" to `RecentTableRowCell.Adapter’.","type":"text"}],"type":"paragraph"}],"media":null},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Create "},{"code":"DPTableAdapter","type":"codeVoice"},{"type":"text","text":" along with "},{"type":"codeVoice","code":"onDisplayLastRow"},{"text":" and add it to the table.","type":"text"}]}],"media":null,"type":"step","code":"dptableadapter_tutorial-04-05-RecentsViewController.swift","caption":[],"runtimePreview":null}]},{"stepsSection":[{"caption":[],"media":null,"code":"dptableadapter_tutorial-05-01-RecentsViewController.swift","runtimePreview":null,"type":"step","content":[{"inlineContent":[{"type":"text","text":"Add "},{"type":"codeVoice","code":"refreshControl"},{"type":"text","text":" to "},{"type":"codeVoice","code":"table"},{"text":".","type":"text"}],"type":"paragraph"}]},{"type":"step","media":null,"code":"dptableadapter_tutorial-05-02-RecentsViewController.swift","caption":[],"runtimePreview":null,"content":[{"inlineContent":[{"type":"text","text":"Add "},{"type":"codeVoice","code":"rightBarButtonItem"},{"text":" to ","type":"text"},{"type":"codeVoice","code":"navigationItem"},{"type":"text","text":"."}],"type":"paragraph"}]},{"runtimePreview":null,"type":"step","caption":[],"content":[{"inlineContent":[{"type":"text","text":"Add events processing from "},{"type":"codeVoice","code":"model"},{"type":"text","text":" and call "},{"code":"model.reload()","type":"codeVoice"},{"type":"text","text":" at the start of "},{"code":"viewController","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}],"media":null,"code":"dptableadapter_tutorial-05-03-RecentsViewController.swift"}],"anchor":"Final-setup","contentSection":[{"kind":"contentAndMedia","mediaPosition":"trailing","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Make the final settings to complete our module."}]}]}],"title":"Final setup"}],"kind":"tasks"}],"metadata":{"role":"project","categoryPathComponent":"DPUIKit-Tutorial","category":"DPUIKit","title":"Working with DPTableAdapter"},"kind":"project","variants":[{"paths":["\/tutorials\/dpuikit\/dptableadapter-tutorial"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"modules":[{"projects":[{"sections":[{"reference":"doc:\/\/DPUIKit\/tutorials\/DPUIKit\/DPTableAdapter-Tutorial#Domain-layer","kind":"task"},{"reference":"doc:\/\/DPUIKit\/tutorials\/DPUIKit\/DPTableAdapter-Tutorial#ViewModel","kind":"task"},{"kind":"task","reference":"doc:\/\/DPUIKit\/tutorials\/DPUIKit\/DPTableAdapter-Tutorial#Views"},{"kind":"task","reference":"doc:\/\/DPUIKit\/tutorials\/DPUIKit\/DPTableAdapter-Tutorial#Table-adapter"},{"kind":"task","reference":"doc:\/\/DPUIKit\/tutorials\/DPUIKit\/DPTableAdapter-Tutorial#Final-setup"}],"reference":"doc:\/\/DPUIKit\/tutorials\/DPUIKit\/DPTableAdapter-Tutorial"}],"reference":"doc:\/\/DPUIKit\/tutorials\/DPUIKit-Tutorial\/DPTableAdapter"}],"paths":[["doc:\/\/DPUIKit\/tutorials\/DPUIKit-Tutorial","doc:\/\/DPUIKit\/tutorials\/DPUIKit-Tutorial\/$volume","doc:\/\/DPUIKit\/tutorials\/DPUIKit-Tutorial\/DPTableAdapter"],["doc:\/\/DPUIKit\/documentation\/DPUIKit","doc:\/\/DPUIKit\/documentation\/DPUIKit\/Table"]],"reference":"doc:\/\/DPUIKit\/tutorials\/DPUIKit-Tutorial"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/DPUIKit\/tutorials\/DPUIKit\/DPTableAdapter-Tutorial"},"references":{"dptableadapter_tutorial-02-03-RecentsViewModel.swift":{"content":["import Foundation","import DPUIKit","","final class RecentsViewModel: DPViewModel {","    ","    \/\/ MARK: - Init","    override init() {","        self.recentService = RecentMockService()","    }","    ","    \/\/ MARK: - Props","    private let recentService: RecentService","    private(set) var recents: [Recent] = []","    ","    var onRecents: (([Recent]) -> Void)?","    var onCreateRecent: ((Recent) -> Void)?","    var onDeleteRecent: ((Recent) -> Void)?","    ","    \/\/ MARK: - Methods","    override func reload() {","        super.reload()","        ","        self.recentService.getRecents { [weak self] recents in","            self?.recents  = recents","            self?.onRecents?(self?.recents ?? [])","        }","    }","    ","    override func loadMore() {","        super.loadMore()","        ","        self.recentService.getRecents { [weak self] recents in","            self?.recents += recents","            self?.onRecents?(self?.recents ?? [])","        }","    }","    ","    func createRecent() {","        self.recentService.createRecent { [weak self] recent in","            self?.recents.insert(recent, at: 0)","            self?.onCreateRecent?(recent)","        }","    }","    ","    func deleteRecent(_ recent: Recent) {","        self.recentService.deleteRecent(recent) { [weak self] in","            self?.recents.removeAll(where: { $0 == recent })","            self?.onDeleteRecent?(recent)","        }","    }","    ","}"],"syntax":"swift","type":"file","fileName":"RecentsViewModel.swift","highlights":[{"line":18},{"line":19},{"line":20},{"line":21},{"line":22},{"line":23},{"line":24},{"line":25},{"line":26},{"line":27},{"line":28},{"line":29},{"line":30},{"line":31},{"line":32},{"line":33},{"line":34},{"line":35},{"line":36},{"line":37},{"line":38},{"line":39},{"line":40},{"line":41},{"line":42},{"line":43},{"line":44},{"line":45},{"line":46},{"line":47},{"line":48},{"line":49},{"line":50},{"line":51}],"fileType":"swift","identifier":"dptableadapter_tutorial-02-03-RecentsViewModel.swift"},"dptableadapter_tutorial-03-02-RecentsViewController.swift":{"content":["import Foundation","import UIKit","import DPUIKit","","final class RecentsViewController: DPViewController {","    ","    \/\/ MARK: - Init","    override init() {","        super.init()","        self.model = .init()","    }","    ","    required init?(coder: NSCoder) {","        fatalError(\"init(coder:) has not been implemented\")","    }","    ","    \/\/ MARK: - Props","    private var model: RecentsViewModel? {","        get { self._model as? RecentsViewModel }","        set { self._model = newValue }","    }","    ","    private lazy var tableView: DPTableView = {","        let result = DPTableView()","        result.separatorStyle = .singleLine","        return result","    }()","    ","    \/\/ MARK: - Methods","    override func setupComponents() {","        super.setupComponents()","        ","        self.view.backgroundColor = .white","        self.navigationItem.title = \"Recents\"","        ","        self.tableView.addToSuperview(self.view, withConstraints: [ .edges(to: .safeArea) ])","    }","    ","}"],"syntax":"swift","type":"file","fileName":"RecentsViewController.swift","highlights":[{"line":23},{"line":24},{"line":25},{"line":26},{"line":27},{"line":28},{"line":29},{"line":30},{"line":31},{"line":32},{"line":33},{"line":34},{"line":35},{"line":36},{"line":37},{"line":38}],"fileType":"swift","identifier":"dptableadapter_tutorial-03-02-RecentsViewController.swift"},"dptableadapter_tutorial-05-03-RecentsViewController.swift":{"content":["import Foundation","import UIKit","import DPUIKit","","final class RecentsViewController: DPViewController {","    ","    \/\/ MARK: - Init","    override init() {","        super.init()","        self.model = .init()","    }","    ","    required init?(coder: NSCoder) {","        fatalError(\"init(coder:) has not been implemented\")","    }","    ","    \/\/ MARK: - Props","    private var model: RecentsViewModel? {","        get { self._model as? RecentsViewModel }","        set { self._model = newValue }","    }","    ","    var didSelect: ((Recent) -> Void)?","    ","    private lazy var tableView: DPTableView = {","        let recentAdapter = RecentTableRowCell.Adapter(","            didSelect: { [weak self] ctx in","                self?.didSelect?(ctx.model)","            },","            onCellLeading: { [weak self] ctx in","                .init(actions: [","                    .init(style: .normal, title: \"Info\", handler: { [weak self] _, _, handler in","                        handler(true)","                        self?.showInfo(ctx.model)","                    })","                ])","            },","            onCellTrailing: { [weak self] ctx in","                .init(actions: [","                    .init(style: .destructive, title: \"Delete\", handler: { [weak self] _, _, handler in","                        handler(true)","                        self?.model?.deleteRecent(ctx.model)","                    })","                ])","            }","        )","        ","        let adapter = DPTableAdapter(rowAdapters: [ recentAdapter ])","        adapter.onDisplayLastRow = { [weak self] in","            self?.model?.loadMore()","        }","        ","        let result = DPTableView()","        result.separatorStyle = .singleLine","        result.adapter = adapter","        ","        result.refreshControl = DPRefreshControl(didBeginRefreshing: { [weak self] in","            self?.model?.reload()","        })","        ","        return result","    }()","    ","    \/\/ MARK: - Methods","    override func setupComponents() {","        super.setupComponents()","        ","        self.view.backgroundColor = .white","        self.navigationItem.title = \"Recents\"","        ","        self.navigationItem.rightBarButtonItem = DPBarButtonItem(title: \"Add\", style: .plain, onAction: { [weak self] in","            self?.model?.createRecent()","        })","        ","        self.model?.onRecents = { [weak self] recents in","            self?.tableView.refreshControl?.endRefreshing()","            self?.tableView.adapter?.reloadData([","                DPTableSection(rows: recents)","            ])","        }","        ","        self.model?.onCreateRecent = { [weak self] recent in","            self?.tableView.adapter?.performBatchUpdates([","                .insertRows([recent], at: [.init(row: 0, section: 0)], with: .fade)","            ])","        }","        ","        self.model?.onDeleteRecent = { [weak self] recent in","            self?.tableView.adapter?.performBatchUpdates([","                .deleteRows([recent], with: .top)","            ])","        }","        ","        self.model?.reload()","        ","        self.tableView.addToSuperview(self.view, withConstraints: [ .edges(to: .safeArea) ])","    }","    ","}","","\/\/ MARK: - Private","private extension RecentsViewController {","    ","    func showInfo(_ recent: Recent) {","        let alert = UIAlertController(title: \"Info\", message: \"This is info of Recent\", preferredStyle: .alert)","        alert.addAction(.init(title: \"OK\", style: .cancel))","        self.present(alert, animated: true)","    }","    ","}"],"syntax":"swift","type":"file","fileName":"RecentsViewController.swift","highlights":[{"line":75},{"line":76},{"line":77},{"line":78},{"line":79},{"line":80},{"line":81},{"line":82},{"line":83},{"line":84},{"line":85},{"line":86},{"line":87},{"line":88},{"line":89},{"line":90},{"line":91},{"line":92},{"line":93},{"line":94},{"line":95}],"fileType":"swift","identifier":"dptableadapter_tutorial-05-03-RecentsViewController.swift"},"dptableadapter_tutorial-04-03-RecentsViewController.swift":{"content":["import Foundation","import UIKit","import DPUIKit","","final class RecentsViewController: DPViewController {","    ","    \/\/ MARK: - Init","    override init() {","        super.init()","        self.model = .init()","    }","    ","    required init?(coder: NSCoder) {","        fatalError(\"init(coder:) has not been implemented\")","    }","    ","    \/\/ MARK: - Props","    private var model: RecentsViewModel? {","        get { self._model as? RecentsViewModel }","        set { self._model = newValue }","    }","    ","    var didSelect: ((Recent) -> Void)?","    ","    private lazy var tableView: DPTableView = {","        let recentAdapter = RecentTableRowCell.Adapter(","            didSelect: { [weak self] ctx in","                self?.didSelect?(ctx.model)","            },","            onCellLeading: { [weak self] ctx in","                .init(actions: [","                    .init(style: .normal, title: \"Info\", handler: { [weak self] _, _, handler in","                        handler(true)","                        self?.showInfo(ctx.model)","                    })","                ])","            }","        )","        ","        let result = DPTableView()","        result.separatorStyle = .singleLine","        return result","    }()","    ","    \/\/ MARK: - Methods","    override func setupComponents() {","        super.setupComponents()","        ","        self.view.backgroundColor = .white","        self.navigationItem.title = \"Recents\"","        ","        self.tableView.addToSuperview(self.view, withConstraints: [ .edges(to: .safeArea) ])","    }","    ","}","","\/\/ MARK: - Private","private extension RecentsViewController {","    ","    func showInfo(_ recent: Recent) {","        let alert = UIAlertController(title: \"Info\", message: \"This is info of Recent\", preferredStyle: .alert)","        alert.addAction(.init(title: \"OK\", style: .cancel))","        self.present(alert, animated: true)","    }","    ","}"],"syntax":"swift","type":"file","fileName":"RecentsViewController.swift","highlights":[{"line":29},{"line":30},{"line":31},{"line":32},{"line":33},{"line":34},{"line":35},{"line":36},{"line":56},{"line":57},{"line":58},{"line":59},{"line":60},{"line":61},{"line":62},{"line":63},{"line":64},{"line":65},{"line":66}],"fileType":"swift","identifier":"dptableadapter_tutorial-04-03-RecentsViewController.swift"},"doc://DPUIKit/tutorials/DPUIKit/DPTableAdapter-Tutorial":{"kind":"project","identifier":"doc:\/\/DPUIKit\/tutorials\/DPUIKit\/DPTableAdapter-Tutorial","abstract":[{"type":"text","text":"Let’s create a screen with content in a table."}],"title":"Working with DPTableAdapter","type":"topic","role":"project","estimatedTime":"20min","url":"\/tutorials\/dpuikit\/dptableadapter-tutorial"},"dptableadapter_tutorial-05-02-RecentsViewController.swift":{"content":["import Foundation","import UIKit","import DPUIKit","","final class RecentsViewController: DPViewController {","    ","    \/\/ MARK: - Init","    override init() {","        super.init()","        self.model = .init()","    }","    ","    required init?(coder: NSCoder) {","        fatalError(\"init(coder:) has not been implemented\")","    }","    ","    \/\/ MARK: - Props","    private var model: RecentsViewModel? {","        get { self._model as? RecentsViewModel }","        set { self._model = newValue }","    }","    ","    var didSelect: ((Recent) -> Void)?","    ","    private lazy var tableView: DPTableView = {","        let recentAdapter = RecentTableRowCell.Adapter(","            didSelect: { [weak self] ctx in","                self?.didSelect?(ctx.model)","            },","            onCellLeading: { [weak self] ctx in","                .init(actions: [","                    .init(style: .normal, title: \"Info\", handler: { [weak self] _, _, handler in","                        handler(true)","                        self?.showInfo(ctx.model)","                    })","                ])","            },","            onCellTrailing: { [weak self] ctx in","                .init(actions: [","                    .init(style: .destructive, title: \"Delete\", handler: { [weak self] _, _, handler in","                        handler(true)","                        self?.model?.deleteRecent(ctx.model)","                    })","                ])","            }","        )","        ","        let adapter = DPTableAdapter(rowAdapters: [ recentAdapter ])","        adapter.onDisplayLastRow = { [weak self] in","            self?.model?.loadMore()","        }","        ","        let result = DPTableView()","        result.separatorStyle = .singleLine","        result.adapter = adapter","        ","        result.refreshControl = DPRefreshControl(didBeginRefreshing: { [weak self] in","            self?.model?.reload()","        })","        ","        return result","    }()","    ","    \/\/ MARK: - Methods","    override func setupComponents() {","        super.setupComponents()","        ","        self.view.backgroundColor = .white","        self.navigationItem.title = \"Recents\"","        ","        self.navigationItem.rightBarButtonItem = DPBarButtonItem(title: \"Add\", style: .plain, onAction: { [weak self] in","            self?.model?.createRecent()","        })","        ","        self.tableView.addToSuperview(self.view, withConstraints: [ .edges(to: .safeArea) ])","    }","    ","}","","\/\/ MARK: - Private","private extension RecentsViewController {","    ","    func showInfo(_ recent: Recent) {","        let alert = UIAlertController(title: \"Info\", message: \"This is info of Recent\", preferredStyle: .alert)","        alert.addAction(.init(title: \"OK\", style: .cancel))","        self.present(alert, animated: true)","    }","    ","}"],"syntax":"swift","type":"file","fileName":"RecentsViewController.swift","highlights":[{"line":71},{"line":72},{"line":73},{"line":74}],"fileType":"swift","identifier":"dptableadapter_tutorial-05-02-RecentsViewController.swift"},"dptableadapter_tutorial-01-02-Recent.swift":{"content":["import Foundation","","struct Recent: Identifiable, Equatable {","    let id = UUID()","    let title: String","    let body: String","    ","    static func == (lhs: Self, rhs: Self) -> Bool {","        lhs.id == rhs.id","    }","}"],"syntax":"swift","type":"file","fileName":"Recent.swift","highlights":[{"line":3},{"line":4},{"line":7},{"line":8},{"line":9},{"line":10}],"fileType":"swift","identifier":"dptableadapter_tutorial-01-02-Recent.swift"},"dptableadapter_tutorial-02-02-RecentsViewModel.swift":{"content":["import Foundation","import DPUIKit","","final class RecentsViewModel: DPViewModel {","    ","    \/\/ MARK: - Init","    override init() {","        self.recentService = RecentMockService()","    }","    ","    \/\/ MARK: - Props","    private let recentService: RecentService","    private(set) var recents: [Recent] = []","    ","    var onRecents: (([Recent]) -> Void)?","    var onCreateRecent: ((Recent) -> Void)?","    var onDeleteRecent: ((Recent) -> Void)?","}"],"syntax":"swift","type":"file","fileName":"RecentsViewModel.swift","highlights":[{"line":6},{"line":7},{"line":8},{"line":9},{"line":10},{"line":11},{"line":12},{"line":13},{"line":14},{"line":15},{"line":16},{"line":17}],"fileType":"swift","identifier":"dptableadapter_tutorial-02-02-RecentsViewModel.swift"},"doc://DPUIKit/tutorials/DPUIKit/DPTableAdapter-Tutorial#Final-setup":{"url":"\/tutorials\/dpuikit\/dptableadapter-tutorial#Final-setup","abstract":[{"text":"Let’s create a screen with content in a table.","type":"text"}],"type":"section","title":"Final setup","role":"pseudoSymbol","identifier":"doc:\/\/DPUIKit\/tutorials\/DPUIKit\/DPTableAdapter-Tutorial#Final-setup","kind":"section"},"doc://DPUIKit/tutorials/DPUIKit-Tutorial/DPTableAdapter":{"url":"\/tutorials\/dpuikit-tutorial\/dptableadapter","abstract":[],"type":"topic","title":"DPTableAdapter","role":"article","identifier":"doc:\/\/DPUIKit\/tutorials\/DPUIKit-Tutorial\/DPTableAdapter","kind":"article"},"dptableadapter_tutorial-04-04-RecentsViewController.png":{"identifier":"dptableadapter_tutorial-04-04-RecentsViewController.png","type":"image","variants":[{"url":"\/images\/dptableadapter_tutorial-04-04-RecentsViewController.png","traits":["1x","light"]}],"alt":null},"doc://DPUIKit/tutorials/DPUIKit/DPTableAdapter-Tutorial#Views":{"url":"\/tutorials\/dpuikit\/dptableadapter-tutorial#Views","abstract":[{"text":"Let’s create a screen with content in a table.","type":"text"}],"type":"section","title":"Views","role":"pseudoSymbol","identifier":"doc:\/\/DPUIKit\/tutorials\/DPUIKit\/DPTableAdapter-Tutorial#Views","kind":"section"},"dptableadapter_tutorial-04-02-RecentsViewController.swift":{"content":["import Foundation","import UIKit","import DPUIKit","","final class RecentsViewController: DPViewController {","    ","    \/\/ MARK: - Init","    override init() {","        super.init()","        self.model = .init()","    }","    ","    required init?(coder: NSCoder) {","        fatalError(\"init(coder:) has not been implemented\")","    }","    ","    \/\/ MARK: - Props","    private var model: RecentsViewModel? {","        get { self._model as? RecentsViewModel }","        set { self._model = newValue }","    }","    ","    var didSelect: ((Recent) -> Void)?","    ","    private lazy var tableView: DPTableView = {","        let recentAdapter = RecentTableRowCell.Adapter(","            didSelect: { [weak self] ctx in","                self?.didSelect?(ctx.model)","            }","        )","        ","        let result = DPTableView()","        result.separatorStyle = .singleLine","        return result","    }()","    ","    \/\/ MARK: - Methods","    override func setupComponents() {","        super.setupComponents()","        ","        self.view.backgroundColor = .white","        self.navigationItem.title = \"Recents\"","        ","        self.tableView.addToSuperview(self.view, withConstraints: [ .edges(to: .safeArea) ])","    }","    ","}"],"syntax":"swift","type":"file","fileName":"RecentsViewController.swift","highlights":[{"line":23},{"line":24},{"line":26},{"line":27},{"line":28},{"line":29},{"line":30}],"fileType":"swift","identifier":"dptableadapter_tutorial-04-02-RecentsViewController.swift"},"doc://DPUIKit/tutorials/DPUIKit/DPTableAdapter-Tutorial#ViewModel":{"url":"\/tutorials\/dpuikit\/dptableadapter-tutorial#ViewModel","abstract":[{"text":"Let’s create a screen with content in a table.","type":"text"}],"type":"section","title":"ViewModel","role":"pseudoSymbol","identifier":"doc:\/\/DPUIKit\/tutorials\/DPUIKit\/DPTableAdapter-Tutorial#ViewModel","kind":"section"},"dptableadapter_tutorial-05-01-RecentsViewController.swift":{"content":["import Foundation","import UIKit","import DPUIKit","","final class RecentsViewController: DPViewController {","    ","    \/\/ MARK: - Init","    override init() {","        super.init()","        self.model = .init()","    }","    ","    required init?(coder: NSCoder) {","        fatalError(\"init(coder:) has not been implemented\")","    }","    ","    \/\/ MARK: - Props","    private var model: RecentsViewModel? {","        get { self._model as? RecentsViewModel }","        set { self._model = newValue }","    }","    ","    var didSelect: ((Recent) -> Void)?","    ","    private lazy var tableView: DPTableView = {","        let recentAdapter = RecentTableRowCell.Adapter(","            didSelect: { [weak self] ctx in","                self?.didSelect?(ctx.model)","            },","            onCellLeading: { [weak self] ctx in","                .init(actions: [","                    .init(style: .normal, title: \"Info\", handler: { [weak self] _, _, handler in","                        handler(true)","                        self?.showInfo(ctx.model)","                    })","                ])","            },","            onCellTrailing: { [weak self] ctx in","                .init(actions: [","                    .init(style: .destructive, title: \"Delete\", handler: { [weak self] _, _, handler in","                        handler(true)","                        self?.model?.deleteRecent(ctx.model)","                    })","                ])","            }","        )","        ","        let adapter = DPTableAdapter(rowAdapters: [ recentAdapter ])","        adapter.onDisplayLastRow = { [weak self] in","            self?.model?.loadMore()","        }","        ","        let result = DPTableView()","        result.separatorStyle = .singleLine","        result.adapter = adapter","        ","        result.refreshControl = DPRefreshControl(didBeginRefreshing: { [weak self] in","            self?.model?.reload()","        })","        ","        return result","    }()","    ","    \/\/ MARK: - Methods","    override func setupComponents() {","        super.setupComponents()","        ","        self.view.backgroundColor = .white","        self.navigationItem.title = \"Recents\"","        ","        self.tableView.addToSuperview(self.view, withConstraints: [ .edges(to: .safeArea) ])","    }","    ","}","","\/\/ MARK: - Private","private extension RecentsViewController {","    ","    func showInfo(_ recent: Recent) {","        let alert = UIAlertController(title: \"Info\", message: \"This is info of Recent\", preferredStyle: .alert)","        alert.addAction(.init(title: \"OK\", style: .cancel))","        self.present(alert, animated: true)","    }","    ","}"],"syntax":"swift","type":"file","fileName":"RecentsViewController.swift","highlights":[],"fileType":"swift","identifier":"dptableadapter_tutorial-05-01-RecentsViewController.swift"},"doc://DPUIKit/tutorials/DPUIKit-Tutorial":{"kind":"overview","identifier":"doc:\/\/DPUIKit\/tutorials\/DPUIKit-Tutorial","abstract":[{"text":"Let’s look at working with the main components of the library","type":"text"}],"title":"Tutorials DPUIKit","type":"topic","role":"overview","url":"\/tutorials\/dpuikit-tutorial"},"dptableadapter_tutorial-04-01-RecentsViewController.swift":{"content":["import Foundation","import UIKit","import DPUIKit","","final class RecentsViewController: DPViewController {","    ","    \/\/ MARK: - Init","    override init() {","        super.init()","        self.model = .init()","    }","    ","    required init?(coder: NSCoder) {","        fatalError(\"init(coder:) has not been implemented\")","    }","    ","    \/\/ MARK: - Props","    private var model: RecentsViewModel? {","        get { self._model as? RecentsViewModel }","        set { self._model = newValue }","    }","    ","    private lazy var tableView: DPTableView = {","        let recentAdapter = RecentTableRowCell.Adapter()","        ","        let result = DPTableView()","        result.separatorStyle = .singleLine","        return result","    }()","    ","    \/\/ MARK: - Methods","    override func setupComponents() {","        super.setupComponents()","        ","        self.view.backgroundColor = .white","        self.navigationItem.title = \"Recents\"","        ","        self.tableView.addToSuperview(self.view, withConstraints: [ .edges(to: .safeArea) ])","    }","    ","}"],"syntax":"swift","type":"file","fileName":"RecentsViewController.swift","highlights":[{"line":24},{"line":25}],"fileType":"swift","identifier":"dptableadapter_tutorial-04-01-RecentsViewController.swift"},"dptableadapter_tutorial-result.mp4":{"identifier":"dptableadapter_tutorial-result.mp4","type":"video","variants":[{"traits":["1x","light"],"url":"\/videos\/dptableadapter_tutorial-result.mp4"}],"alt":null,"poster":"dptableadapter_tutorial-result.png"},"dptableadapter_tutorial-04-05-RecentsViewController.swift":{"content":["import Foundation","import UIKit","import DPUIKit","","final class RecentsViewController: DPViewController {","    ","    \/\/ MARK: - Init","    override init() {","        super.init()","        self.model = .init()","    }","    ","    required init?(coder: NSCoder) {","        fatalError(\"init(coder:) has not been implemented\")","    }","    ","    \/\/ MARK: - Props","    private var model: RecentsViewModel? {","        get { self._model as? RecentsViewModel }","        set { self._model = newValue }","    }","    ","    var didSelect: ((Recent) -> Void)?","    ","    private lazy var tableView: DPTableView = {","        let recentAdapter = RecentTableRowCell.Adapter(","            didSelect: { [weak self] ctx in","                self?.didSelect?(ctx.model)","            },","            onCellLeading: { [weak self] ctx in","                .init(actions: [","                    .init(style: .normal, title: \"Info\", handler: { [weak self] _, _, handler in","                        handler(true)","                        self?.showInfo(ctx.model)","                    })","                ])","            },","            onCellTrailing: { [weak self] ctx in","                .init(actions: [","                    .init(style: .destructive, title: \"Delete\", handler: { [weak self] _, _, handler in","                        handler(true)","                        self?.model?.deleteRecent(ctx.model)","                    })","                ])","            }","        )","        ","        let adapter = DPTableAdapter(rowAdapters: [ recentAdapter ])","        adapter.onDisplayLastRow = { [weak self] in","            self?.model?.loadMore()","        }","        ","        let result = DPTableView()","        result.separatorStyle = .singleLine","        result.adapter = adapter","        return result","    }()","    ","    \/\/ MARK: - Methods","    override func setupComponents() {","        super.setupComponents()","        ","        self.view.backgroundColor = .white","        self.navigationItem.title = \"Recents\"","        ","        self.tableView.addToSuperview(self.view, withConstraints: [ .edges(to: .safeArea) ])","    }","    ","}","","\/\/ MARK: - Private","private extension RecentsViewController {","    ","    func showInfo(_ recent: Recent) {","        let alert = UIAlertController(title: \"Info\", message: \"This is info of Recent\", preferredStyle: .alert)","        alert.addAction(.init(title: \"OK\", style: .cancel))","        self.present(alert, animated: true)","    }","    ","}"],"syntax":"swift","type":"file","fileName":"RecentsViewController.swift","highlights":[{"line":48},{"line":49},{"line":50},{"line":51},{"line":52},{"line":55}],"fileType":"swift","identifier":"dptableadapter_tutorial-04-05-RecentsViewController.swift"},"dptableadapter_tutorial-03-01-RecentsViewController.swift":{"content":["import Foundation","import UIKit","import DPUIKit","","final class RecentsViewController: DPViewController {","    ","    \/\/ MARK: - Init","    override init() {","        super.init()","        self.model = .init()","    }","    ","    required init?(coder: NSCoder) {","        fatalError(\"init(coder:) has not been implemented\")","    }","    ","    \/\/ MARK: - Props","    private var model: RecentsViewModel? {","        get { self._model as? RecentsViewModel }","        set { self._model = newValue }","    }","    ","}"],"syntax":"swift","type":"file","fileName":"RecentsViewController.swift","highlights":[],"fileType":"swift","identifier":"dptableadapter_tutorial-03-01-RecentsViewController.swift"},"dptableadapter_tutorial-01-03-RecentService.swift":{"content":["import Foundation","","protocol RecentService {","    func getRecents(completion: @escaping ([Recent]) -> Void)","    func createRecent(completion: @escaping (Recent) -> Void)","    func deleteRecent(_ recent: Recent, completion: @escaping () -> Void)","}"],"syntax":"swift","type":"file","fileName":"RecentService.swift","highlights":[],"fileType":"swift","identifier":"dptableadapter_tutorial-01-03-RecentService.swift"},"dptableadapter_tutorial-result.png":{"identifier":"dptableadapter_tutorial-result.png","type":"image","variants":[{"url":"\/images\/dptableadapter_tutorial-result.png","traits":["1x","light"]}],"alt":null},"dptableadapter_tutorial-02-01-RecentsViewModel.swift":{"content":["import Foundation","import DPUIKit","","final class RecentsViewModel: DPViewModel {","    ","}"],"syntax":"swift","type":"file","fileName":"RecentsViewModel.swift","highlights":[],"fileType":"swift","identifier":"dptableadapter_tutorial-02-01-RecentsViewModel.swift"},"doc://DPUIKit/tutorials/DPUIKit/DPTableAdapter-Tutorial#Domain-layer":{"url":"\/tutorials\/dpuikit\/dptableadapter-tutorial#Domain-layer","abstract":[{"text":"Let’s create a screen with content in a table.","type":"text"}],"type":"section","title":"Domain layer","role":"pseudoSymbol","identifier":"doc:\/\/DPUIKit\/tutorials\/DPUIKit\/DPTableAdapter-Tutorial#Domain-layer","kind":"section"},"dptableadapter_tutorial-04-03-RecentsViewController.png":{"variants":[{"traits":["1x","light"],"url":"\/images\/dptableadapter_tutorial-04-03-RecentsViewController.png"}],"identifier":"dptableadapter_tutorial-04-03-RecentsViewController.png","alt":null,"type":"image"},"dptableadapter_tutorial-03-03-RecentView.png":{"identifier":"dptableadapter_tutorial-03-03-RecentView.png","type":"image","variants":[{"url":"\/images\/dptableadapter_tutorial-03-03-RecentView.png","traits":["1x","light"]}],"alt":null},"doc://DPUIKit/tutorials/DPUIKit/DPTableAdapter-Tutorial#Table-adapter":{"url":"\/tutorials\/dpuikit\/dptableadapter-tutorial#Table-adapter","abstract":[{"type":"text","text":"Let’s create a screen with content in a table."}],"type":"section","title":"Table adapter","role":"pseudoSymbol","identifier":"doc:\/\/DPUIKit\/tutorials\/DPUIKit\/DPTableAdapter-Tutorial#Table-adapter","kind":"section"},"dptableadapter_tutorial-03-03-RecentView.swift":{"content":["import Foundation","import DPUIKit","import UIKit","","final class RecentView: DPView {","    ","    \/\/ MARK: - Props","    let titleLabel = UILabel().applyStyles(","        .textColor(AppTheme.mainColor),","        .textAlignment(.left),","        .numberOfLines(0),","        .font(.systemFont(ofSize: 16, weight: .medium))","    )","    ","    let bodyLabel = UILabel().applyStyles(","        .textColor(AppTheme.mainColor),","        .textAlignment(.left),","        .numberOfLines(0),","        .font(.systemFont(ofSize: 14, weight: .regular))","    )","    ","    var recent: Recent? {","        didSet { self.updateComponents() }","    }","    ","    \/\/ MARK: - Methods","    override func setupComponents() {","        super.setupComponents()","        ","        UIStackView(arrangedSubviews: [self.titleLabel, self.bodyLabel])","            .applyStyles(.axis(.vertical), .spacing(8))","            .addToSuperview(self, withConstraints: [ .edges() ])","    }","    ","    override func updateComponents() {","        super.updateComponents()","        ","        self.titleLabel.text = self.recent?.title","        self.bodyLabel.text = self.recent?.body","    }","    ","}"],"syntax":"swift","type":"file","fileName":"RecentView.swift","highlights":[],"fileType":"swift","identifier":"dptableadapter_tutorial-03-03-RecentView.swift"},"dptableadapter_tutorial-01-04-RecentService.swift":{"content":["import Foundation","","protocol RecentService {","    func getRecents() async -> [Recent]","    func createRecent() async Recent","    func removeRecent(_ recent: Recent) async","}","","final class RecentMockService: RecentService {","    ","    private let outputQueue: DispatchQueue = .main","    ","    private func mockRecent() -> Recent {","        let id = UUID()","        let text = \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. In consectetur quis sem eget placerat. Nunc nisi dolor, malesuada in velit ut, vehicula commodo dui. Fusce fringilla ante non molestie maximus. Aliquam luctus faucibus diam, nec dapibus nunc. Ut non aliquet purus. Donec pellentesque nisl a ligula lobortis, a consectetur leo gravida. Morbi sed sodales mauris. Sed sed ipsum tristique, vulputate sem non, cursus leo. fringilla.\"","        ","        return Recent(","            id: id,","            title: \"# \\(id.uuidString)\",","            body: String(text.prefix(.random(in: 10...text.count)))","        )","    }","    ","    func getRecents(completion: @escaping ([Recent]) -> Void) {","        let recents = (0...10).map({ _ in self.mockRecent() })","        ","        self.outputQueue.asyncAfter(deadline: .now() + .milliseconds(500)) {","            completion(recents)","        }","    }","    ","    func createRecent(completion: @escaping (Recent) -> Void) {","        let recent = self.mockRecent()","        ","        self.outputQueue.asyncAfter(deadline: .now() + .milliseconds(500)) {","            completion(recent)","        }","    }","    ","    func deleteRecent(_ recent: Recent, completion: @escaping () -> Void) {","        self.outputQueue.asyncAfter(deadline: .now() + .milliseconds(500)) {","            completion()","        }","    }","    ","    ","}"],"syntax":"swift","type":"file","fileName":"RecentService.swift","highlights":[{"line":4},{"line":5},{"line":6},{"line":8},{"line":9},{"line":10},{"line":11},{"line":12},{"line":13},{"line":14},{"line":15},{"line":16},{"line":17},{"line":18},{"line":19},{"line":20},{"line":21},{"line":22},{"line":23},{"line":24},{"line":25},{"line":26},{"line":27},{"line":28},{"line":29},{"line":30},{"line":31},{"line":32},{"line":33},{"line":34},{"line":35},{"line":36},{"line":37},{"line":38},{"line":39},{"line":40},{"line":41},{"line":42},{"line":43},{"line":44},{"line":45},{"line":46},{"line":47}],"fileType":"swift","identifier":"dptableadapter_tutorial-01-04-RecentService.swift"},"dptableadapter_tutorial-01-01-Recent.swift":{"content":["import Foundation","","struct Recent {","    let title: String","    let body: String","}"],"syntax":"swift","type":"file","fileName":"Recent.swift","highlights":[],"fileType":"swift","identifier":"dptableadapter_tutorial-01-01-Recent.swift"},"dptableadapter_tutorial-03-04-RecentTableRowCell.swift":{"content":["import Foundation","import DPUIKit","import UIKit","","final class RecentTableRowCell: DPTableRowCell {","    ","    \/\/ MARK: - Props","    var model: Recent? {","        get { self._model as? Recent }","        set { self._model = newValue }","    }","    ","    private lazy var recentView: RecentView = {","        let result = RecentView()","        result.titleLabel.applyStyles(.numberOfLines(2), .lineBreakMode(.byTruncatingTail))","        result.bodyLabel.applyStyles(.numberOfLines(4), .lineBreakMode(.byTruncatingTail))","        return result","    }()","    ","    \/\/ MARK: - Methods","    override func setHighlighted(_ highlighted: Bool, animated: Bool) {","        self.recentView.alpha = highlighted ? 0.8 : 1.0","    }","    ","    override func setupComponents() {","        super.setupComponents()","        ","        self.recentView.addToSuperview(self.contentView, withConstraints: [","            .edges(.init(top: 16, leading: 16, bottom: -16, trailing: -16))","        ])","    }","    ","    override func updateComponents() {","        super.updateComponents()","        ","        self.recentView.recent = self.model","    }","    ","}","","\/\/ MARK: - Model","extension RecentTableRowCell {","    typealias Adapter = DPTableRowAdapter<RecentTableRowCell, Recent>","}"],"syntax":"swift","type":"file","fileName":"RecentTableRowCell.swift","highlights":[],"fileType":"swift","identifier":"dptableadapter_tutorial-03-04-RecentTableRowCell.swift"},"dptableadapter_tutorial-04-04-RecentsViewController.swift":{"content":["import Foundation","import UIKit","import DPUIKit","","final class RecentsViewController: DPViewController {","    ","    \/\/ MARK: - Init","    override init() {","        super.init()","        self.model = .init()","    }","    ","    required init?(coder: NSCoder) {","        fatalError(\"init(coder:) has not been implemented\")","    }","    ","    \/\/ MARK: - Props","    private var model: RecentsViewModel? {","        get { self._model as? RecentsViewModel }","        set { self._model = newValue }","    }","    ","    var didSelect: ((Recent) -> Void)?","    ","    private lazy var tableView: DPTableView = {","        let recentAdapter = RecentTableRowCell.Adapter(","            didSelect: { [weak self] ctx in","                self?.didSelect?(ctx.model)","            },","            onCellLeading: { [weak self] ctx in","                .init(actions: [","                    .init(style: .normal, title: \"Info\", handler: { [weak self] _, _, handler in","                        handler(true)","                        self?.showInfo(ctx.model)","                    })","                ])","            },","            onCellTrailing: { [weak self] ctx in","                .init(actions: [","                    .init(style: .destructive, title: \"Delete\", handler: { [weak self] _, _, handler in","                        handler(true)","                        self?.model?.deleteRecent(ctx.model)","                    })","                ])","            }","        )","        ","        let result = DPTableView()","        result.separatorStyle = .singleLine","        return result","    }()","    ","    \/\/ MARK: - Methods","    override func setupComponents() {","        super.setupComponents()","        ","        self.view.backgroundColor = .white","        self.navigationItem.title = \"Recents\"","        ","        self.tableView.addToSuperview(self.view, withConstraints: [ .edges(to: .safeArea) ])","    }","    ","}","","\/\/ MARK: - Private","private extension RecentsViewController {","    ","    func showInfo(_ recent: Recent) {","        let alert = UIAlertController(title: \"Info\", message: \"This is info of Recent\", preferredStyle: .alert)","        alert.addAction(.init(title: \"OK\", style: .cancel))","        self.present(alert, animated: true)","    }","    ","}"],"syntax":"swift","type":"file","fileName":"RecentsViewController.swift","highlights":[{"line":37},{"line":38},{"line":39},{"line":40},{"line":41},{"line":42},{"line":43},{"line":44}],"fileType":"swift","identifier":"dptableadapter_tutorial-04-04-RecentsViewController.swift"}}}